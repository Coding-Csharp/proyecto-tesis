@{
    ViewData["Title"] = "Mantenimiento";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@section Styles {

    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.2/css/jquery.dataTables.min.css">
}

<div class="container">

    <br />

    <div class="row header" style="text-align:center;color:green">
        <h3>Mantenimiento</h3>
    </div>

    <a class="btn btn-primary" data-toggle="modal" data-target="#mdlRegisterEmployee">Agregar</a>

    <hr />

    <table id="tblEmployees" class="table table-striped table-bordered" style="width:auto;"></table>
</div>

<div id="mdlRegisterEmployee" class="modal fade" tabindex="-1" aria-labelledby="mdlRegisterEmployee" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header float-right">

                <h5>Registrar trabajador</h5>

                <div class="text-right">
                    <i data-dismiss="modal" aria-label="Close" class="fa fa-close"></i>
                </div>

            </div>

            <div class="modal-body">
                <div>
                    <div class="box">

                        <label>Rol:</label>
                        <select id="sltRoles" class="form-control" required>
                            <option selected>SELECCIONE UNA OPCION</option>
                            <option>ADMINISTRADOR</option>
                            <option>TRABAJADOR</option>
                        </select>

                        <label>DNI:</label>
                        <input id="iptId" class="form-control" required>

                        <label>Especialidad:</label>
                        <select id="sltSpecialties" class="form-control" required></select>

                        <label>Area:</label>
                        <select id="sltAreas" class="form-control" required></select>

                        <label>Cargo:</label>
                        <select id="sltPositions" class="form-control" required></select>

                        <label>Fecha de entrada:</label>
                        <input id="iptDateEntry" type="date" class="form-control" required>

                        <label>Tipo de documento:</label>
                        <input id="iptTypeDocument" class="form-control" required>

                        <label>Nombres:</label>
                        <input id="iptFirstName" class="form-control" required>

                        <label>Apellidos:</label>
                        <input id="iptLastName" class="form-control" required>

                        <label>Fecha de nacimiento:</label>
                        <input id="iptBirthdate" type="date" class="form-control" required>

                        <label>Nacionalidad:</label>
                        <input id="iptNationality" class="form-control" required>

                        <label>Genero:</label>
                        <input id="iptGenre" class="form-control" required>

                        <label>Telefono:</label>
                        <input id="iptPhone" class="form-control" required>

                        <label>Email:</label>
                        <input id="iptEmail" class="form-control" required>

                        <label>Direccion:</label>
                        <input id="iptAddress" class="form-control" required>

                        <label>Zonas de acceso:</label>
                        <input id="iptZoneAccess" class="form-control" required>

                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button id="btnRegisterNewEmployee" type="button" class="btn btn-primary">Registrar</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div id="mdlEditEmployee" class="modal fade" tabindex="-1" aria-labelledby="mdlEditEmployee" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header float-right">

                <h5>Editar trabajador</h5>

                <div class="text-right">
                    <i data-dismiss="modal" aria-label="Close" class="fa fa-close"></i>
                </div>

            </div>

            <div class="modal-body">
                <div>
                    <div class="box">

                        <label>Rol:</label>
                        <select id="slttRoles" class="form-control" required>
                            <option selected>SELECCIONE UNA OPCION</option>
                            <option>ADMINISTRADOR</option>
                            <option>TRABAJADOR</option>
                        </select>

                        <label>DNI:</label>
                        <input id="ipttId" class="form-control" required>

                        <label>Especialidad:</label>
                        <select id="slttSpecialties" class="form-control" required></select>

                        <label>Fecha de entrada:</label>
                        <input id="ipttDateEntry" class="form-control" required>

                        <label>Tipo de documento:</label>
                        <input id="ipttTypeDocument" class="form-control" required>

                        <label>Nombres:</label>
                        <input id="ipttFirstName" class="form-control" required>

                        <label>Apellidos:</label>
                        <input id="ipttLastName" class="form-control" required>

                        <label>Fecha de nacimiento:</label>
                        <input id="ipttBirthdate" class="form-control" required>

                        <label>Nacionalidad:</label>
                        <input id="ipttNationality" class="form-control" required>

                        <label>Genero:</label>
                        <input id="ipttGenre" class="form-control" required>

                        <label>Telefono:</label>
                        <input id="ipttPhone" class="form-control" required>

                        <label>Email:</label>
                        <input id="ipttEmail" class="form-control" required>

                        <label>Direccion:</label>
                        <input id="ipttAddress" class="form-control" required>

                        <label>Zonas de acceso:</label>
                        <input id="ipttZoneAccess" class="form-control" required>

                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button id="btnUpdateEmployee" type="button" class="btn btn-primary">Actualizar</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div id="mdlViewEmployee" class="modal fade" tabindex="-1" aria-labelledby="mdlViewEmployee" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header float-right">

                <h5>Datos del trabajador</h5>

                <div class="text-right">
                    <i data-dismiss="modal" aria-label="Close" class="fa fa-close"></i>
                </div>

            </div>

            <div class="modal-body">
                <div>
                    <div class="box">

                        <label>DNI:</label>
                        <input id="iptttId" class="form-control" readonly>

                        <label>Especialidad:</label>
                        <input id="iptttSpecialty" class="form-control" readonly>

                        <label>Fecha de entrada:</label>
                        <input id="iptttDateEntry" class="form-control" readonly>

                        <label>Tipo de documento:</label>
                        <input id="iptttTypeDocument" class="form-control" readonly>

                        <label>Nombres:</label>
                        <input id="iptttFirstName" class="form-control" readonly>

                        <label>Apellidos:</label>
                        <input id="iptttLastName" class="form-control" readonly>

                        <label>Fecha de nacimiento:</label>
                        <input id="iptttBirthdate" class="form-control" readonly>

                        <label>Nacionalidad:</label>
                        <input id="iptttNationality" class="form-control" readonly>

                        <label>Genero:</label>
                        <input id="iptttGenre" class="form-control" readonly>

                        <label>Telefono:</label>
                        <input id="iptttPhone" class="form-control" readonly>

                        <label>Email:</label>
                        <input id="iptttEmail" class="form-control" readonly>

                        <label>Direccion:</label>
                        <input id="iptttAddress" class="form-control" readonly>

                        <label>Zonas de acceso:</label>
                        <input id="iptttZoneAccess" class="form-control" readonly>

                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript" src="https://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function() {

            var employees = [];

            $(window).on('load', async function () {

                try {

                    await loadListEmployees();
                    loadSpecialties();
                    loadAreas();

                } catch (error) {

                    console.error('Error durante la carga de datos: ', error);
                }
            });

            $('#sltRoles').on('change', function () {

                if ($(this).val() === 'ADMINISTRADOR') {

                    $('#iptZoneAccess').attr('readonly', true);
                } else {

                    $('#iptZoneAccess').attr('readonly', false);
                }
            });

            $('#slttRoles').on('change', function () {

                if ($(this).val() === 'ADMINISTRADOR') {

                    $('#ipttZoneAccess').attr('readonly', true);
                } else {

                    $('#ipttZoneAccess').attr('readonly', false);
                }
            });

            $('#sltAreas').on('change', function () {

                loadPositions($(this).val());
            });

            $('#btnRegisterNewEmployee').on('click', async function () {

                var information = new FormData();

                information.append('Id', $('#iptId').val());
                information.append('SpecialtiesId', $('#sltSpecialties').val());
                information.append('DateEntry', $('#iptDateEntry').val());
                information.append('TypeDocument', $('#iptTypeDocument').val());
                information.append('Firstname', $('#iptFirstName').val());
                information.append('Lastname', $('#iptLastName').val());
                information.append('Birthdate', $('#iptBirthdate').val());
                information.append('Nationality', $('#iptNationality').val());
                information.append('Genre', $('#iptGenre').val());
                information.append('Phone', $('#iptPhone').val());
                information.append('Email', $('#iptEmail').val());
                information.append('Address', $('#iptAddress').val());

                if ($('#sltRoles').val() !== 'ADMINISTRADOR') {

                    information.append('ZoneAccess', $('#iptZoneAccess').val());
                }
 
                information.append('State', 'ACTIVO');

                await registerEmployee(information, $('#sltPositions').val());
                await loadListEmployees();
            });

            $('#btnUpdateEmployee').on('click', async function () {

                var information = new FormData();

                information.append('Id', $('#ipttId').val());
                information.append('SpecialtiesId', $('#slttSpecialties').val());
                information.append('DateEntry', $('#ipttDateEntry').val());
                information.append('TypeDocument', $('#ipttTypeDocument').val());
                information.append('Firstname', $('#ipttFirstName').val());
                information.append('Lastname', $('#ipttLastName').val());
                information.append('Birthdate', $('#ipttBirthdate').val());
                information.append('Nationality', $('#ipttNationality').val());
                information.append('Genre', $('#ipttGenre').val());
                information.append('Phone', $('#ipttPhone').val());
                information.append('Email', $('#ipttEmail').val());
                information.append('Address', $('#ipttAddress').val());

                if ($('#slttRoles').val() !== 'ADMINISTRADOR') {

                    information.append('ZoneAccess', $('#ipttZoneAccess').val());
                }

                information.append('State', 'ACTIVO');

                await updateEmployee(information);
                await loadListEmployees();
            });

            $('#tblEmployees').on('click', '#btnEditEmployee', async function () {

                var table = $('#tblEmployees').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                var filteredEmployees = employees.find(e => e.Id === rowData.Id);

                $('#ipttId').val(filteredEmployees.Id);
                $('#sltSpecialties').val(filteredEmployees.Specialty).change();
                $('#ipttDateEntry').val(filteredEmployees.DateEntry);
                $('#ipttTypeDocument').val(filteredEmployees.TypeDocument);
                $('#ipttFirstName').val(filteredEmployees.Firstname);
                $('#ipttLastName').val(filteredEmployees.Lastname);
                $('#ipttBirthdate').val(filteredEmployees.Birthdate);
                $('#ipttNationality').val(filteredEmployees.Nationality);
                $('#ipttGenre').val(filteredEmployees.Genre);
                $('#ipttPhone').val(filteredEmployees.Phone);
                $('#ipttEmail').val(filteredEmployees.Email);
                $('#ipttAddress').val(filteredEmployees.Address);
                $('#ipttZoneAccess').val(filteredEmployees.ZoneAccess);
            });

            $('#tblEmployees').on('click', '#btnDeleteEmployee', async function () {

                var table = $('#tblEmployees').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                await deleteEmployee(rowData.Id);
                await loadListEmployees();
            });

            $('#tblEmployees').on('click', '#btnViewEmployee', function () {

                var table = $('#tblEmployees').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                var filteredEmployees = employees.find(e => e.Id === rowData.Id);

                $('#iptttId').val(filteredEmployees.Id);
                $('#iptttSpecialty').val(filteredEmployees.Specialty);
                $('#iptttDateEntry').val(filteredEmployees.DateEntry);
                $('#iptttTypeDocument').val(filteredEmployees.TypeDocument);
                $('#iptttFirstName').val(filteredEmployees.Firstname);
                $('#iptttLastName').val(filteredEmployees.Lastname);
                $('#iptttBirthdate').val(filteredEmployees.Birthdate);
                $('#iptttNationality').val(filteredEmployees.Nationality);
                $('#iptttGenre').val(filteredEmployees.Genre);
                $('#iptttPhone').val(filteredEmployees.Phone);
                $('#iptttEmail').val(filteredEmployees.Email);
                $('#iptttAddress').val(filteredEmployees.Address);
                $('#iptttZoneAccess').val(filteredEmployees.ZoneAccess);
            });

            async function loadListEmployees() {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("LoadListEmployees", "Admins")',
                        method: 'GET',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8'
                    });

                    employees = data;

                    fillTableEmployees(employees);

                } catch (error) {

                    window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            async function registerEmployee(information, positionId) {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("RegisterPerson", "Admins")' + `?positionId=${positionId}`,
                        method: 'POST',
                        data: information,
                        cache: false,
                        contentType: false,
                        processData: false
                    });

                    if (data === true) {

                        Swal.fire({
                            icon: 'success',
                            title: 'Trabajador registrado!',
                            text: 'El registro del trabajador se ha realizado correctamente.'
                        });

                    } else {

                        Swal.fire({
                            icon: 'error',
                            title: 'Error al registrar trabajador!',
                            text: 'Se produjo un error al registrar al trabajador.'
                        });
                    }

                } catch (error) {

                    // window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            async function updateEmployee(information) {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("UpdatePerson", "Admins")',
                        method: 'POST',
                        data: information,
                        cache: false,
                        contentType: false,
                        processData: false
                    });

                    if (data === true) {

                        Swal.fire({
                            icon: 'success',
                            title: 'Trabajador actualizado!',
                            text: 'La actualizacion del trabajador se ha realizado correctamente.'
                        });

                    } else {

                        Swal.fire({
                            icon: 'error',
                            title: 'Error al actualizar trabajador!',
                            text: 'Se produjo un error al actualizar al trabajador.'
                        });
                    }

                } catch (error) {

                    // window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            async function deleteEmployee(id) {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("DeletePerson", "Admins")' + `?id=${id}`,
                        method: 'GET',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8'
                    });

                    if (data === true) {

                        Swal.fire({
                            icon: 'success',
                            title: 'Trabajador eliminado!',
                            text: 'La eliminacion del trabajador se ha realizado correctamente.'
                        });

                    } else {

                        Swal.fire({
                            icon: 'error',
                            title: 'Error al eliminar trabajador!',
                            text: 'Se produjo un error al eliminar al trabajador.'
                        });
                    }

                } catch (error) {

                    // window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            function loadSpecialties() {

                jQuery.ajax({

                    url: '@Url.Action("LoadSpecialties", "Admins")',
                    method: 'GET',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {

                        var contentHtml = '';

                        for (const item of data) {

                            contentHtml += `<option value="${item.Id}">${item.Name}</option>`;
                        }

                        $('#sltSpecialties').html(contentHtml);
                        $('#slttSpecialties').html(contentHtml);
                    },
                    error: function () {

                        // window.open('@Url.Action("Error", "Home")', '_self');
                    }
                });
            }

            function loadAreas() {

                jQuery.ajax({

                    url: '@Url.Action("LoadAreas", "Admins")',
                    method: 'GET',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {

                        var contentHtml = '';

                        for (const item of data) {

                            contentHtml += `<option value="${item.Id}">${item.Name}</option>`;
                        }

                        $('#sltAreas').html(contentHtml);
                    },
                    error: function () {

                        // window.open('@Url.Action("Error", "Home")', '_self');
                    }
                });
            }

            function loadPositions(areasId) {

                jQuery.ajax({

                    url: '@Url.Action("LoadPositions", "Admins")' + `?areasId=${areasId}`,
                    method: 'GET',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {

                        var contentHtml = '';

                        for (const item of data) {

                            contentHtml += `<option value="${item.Id}">${item.Name}</option>`;
                        }

                        $('#sltPositions').html(contentHtml);
                    },
                    error: function () {

                        // window.open('@Url.Action("Error", "Home")', '_self');
                    }
                });
            }

            function fillTableEmployees(listEmployees) {

                if (listEmployees.length === 0) {

                    Swal.fire({
                        icon: 'info',
                        title: 'No se encontraron resultados!',
                        text: 'No existen datos.'
                    });

                    return;
                }

                var columns = [];

                columns = [
                    { data: 'Id', title: 'Id' },
                    { data: 'Firstname', title: 'Nombre' },
                    { data: 'Lastname', title: 'Apellido' },
                    { data: 'Area', title: 'Area' },
                    { data: 'Position', title: 'Cargo' },
                    { data: 'Specialty', title: 'Especialidad' }
                ];

                columns.push({

                    data: null,
                    title: "Editar",
                    render: function (data, type, row) {

                        return `
                            <button id="btnEditEmployee" class="btn btn-sm btn-neutral" data-toggle="modal" data-target="#mdlEditEmployee">Editar</button>`;
                    }
                });

                columns.push({

                    data: null,
                    title: "Eliminar",
                    render: function (data, type, row) {

                        return `
                            <button id="btnDeleteEmployee" class="btn btn-sm btn-neutral">Eliminar</button>`;
                    }
                });

                columns.push({

                    data: null,
                    title: "Ver",
                    render: function (data, type, row) {

                        return `
                            <button id="btnViewEmployee" class="btn btn-sm btn-neutral" data-toggle="modal" data-target="#mdlViewEmployee">Ver</button>`;
                    }
                });

                if ($.fn.DataTable.isDataTable('#tblEmployees')) {

                    $('#tblEmployees').DataTable().clear().destroy();
                }

                $('#tblEmployees').DataTable({
                    data: listEmployees,
                    columns: columns,
                    searching: true,
                    paging: true,
                    ordering: true
                });
            }

            function getDateTime() {

                const date = new Date();

                const day = date.getDate();
                const mounth = date.getMonth() + 1;
                const year = date.getFullYear();
                const hour = date.getHours();
                const minutes = date.getMinutes();

                return `${day}/${mounth}/${year} ${hour}:${minutes}`;
            }

            function getFormattedDate(date) {

                let day = String(date.getDate()).padStart(2, '0');
                let mounth = String(date.getMonth() + 1).padStart(2, '0');
                let year = date.getFullYear();
                let hour = String(date.getHours()).padStart(2, '0');
                let minutes = String(date.getMinutes()).padStart(2, '0');

                return `${day}/${mounth}/${year} ${hour}:${minutes}`;
            }
        });

    </script>
}