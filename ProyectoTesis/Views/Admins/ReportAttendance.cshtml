@{
    ViewData["Title"] = "ReportAttendance";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@section Styles {

    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.2/css/jquery.dataTables.min.css">
}

<div class="container">

    <br />

    <div class="row header" style="text-align:center;color:green">
        <h3>Reporte de asistencias</h3>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="row justify-content-center">
                <div class="col-md-4">
                    <label>Buscar por nombre:</label>
                    <input id="iptSearchName" class="form-control" placeholder="Ingresa el nombre">
                </div>
                <div class="col-md-4">
                    <label>Fecha de inicio:</label>
                    <input id="iptStartDate" type="date" class="form-control">
                </div>
                <div class="col-md-4">
                    <label>Fecha de fin:</label>
                    <input id="iptEndDate" type="date" class="form-control">
                </div>
            </div>

            <br />

            <div class="row justify-content-center">
                <button id="btnSearch" class="btn btn-primary">Buscar</button>
            </div>

            <br />

            <div class="row justify-content-center">
                <button id="btnGeneratePdf" class="btn btn-success">Generar PDF</button>
            </div>
        </div>
    </div>

    <hr />

    <table id="tblAttendances" class="table table-striped table-bordered" style="width:auto;"></table>
</div>

@section Scripts {

    <script type="text/javascript" src="https://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function() {

            var attendances = [];

            $(window).on('load', async function () {

                try {

                    await loadListAttendances();

                } catch (error) {

                    console.error('Error durante la carga de datos: ', error);
                }
            });

            $('#btnSearch').on('click', function() {

                var name = $('#iptSearchName').val();
                var startDate = new Date($('#iptStartDate').val());
                var endDate = new Date($('#iptEndDate').val());

                var filteredAttendances = attendances.filter(a => {

                    var attendanceDateParts = a.Date.split('/');
                    var attendanceDate = new Date(attendanceDateParts[2], attendanceDateParts[1] - 1, attendanceDateParts[0]);

                    var isInDateRange = attendanceDate >= startDate && attendanceDate <= endDate;

                    return a.Firstname === name && isInDateRange;
                });

                fillTableAttendances(filteredAttendances);
            });

            async function loadListAttendances() {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("LoadAllListAttendances", "Admins")',
                        method: 'GET',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8'
                    });

                    attendances = data;

                    fillTableAttendances(attendances);

                } catch (error) {

                    //window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            function fillTableAttendances(listAttendances) {

                if (listAttendances.length === 0) {

                    Swal.fire({
                        icon: 'info',
                        title: 'No se encontraron resultados!',
                        text: 'No existen datos.'
                    });

                    return;
                }

                var columns = [];

                columns = [
                    { data: 'Id', title: 'Id' },
                    { data: 'Firstname', title: 'Nombre' },
                    { data: 'Lastname', title: 'Apellido' },
                    { data: 'Date', title: 'Fecha' },
                    { data: 'CheckIn', title: 'Ingreso' },
                    { data: 'CheckOut', title: 'Salida' },
                    { data: 'MinuteLate', title: 'Min tarde' }
                ];

                if ($.fn.DataTable.isDataTable('#tblAttendances')) {

                    $('#tblAttendances').DataTable().clear().destroy();
                }

                for (var i = 0; i < listAttendances.length; ++i) {

                    var date = new Date(listAttendances[i].Date);
                    listAttendances[i].Date = getFormattedDate(date);

                    var checkInDate = new Date(listAttendances[i].CheckIn);
                    listAttendances[i].CheckIn = getFormattedTime(checkInDate);

                    if (listAttendances[i].CheckOut !== null) {

                        var checkOutDate = new Date(listAttendances[i].CheckOut);
                        listAttendances[i].CheckOut = getFormattedTime(checkOutDate);
                    }
                    else {

                        listAttendances[i].CheckOut = null;
                    }
                }

                $('#tblAttendances').DataTable({
                    data: listAttendances,
                    columns: columns,
                    searching: false,
                    paging: true,
                    ordering: true
                });
            }

            function getDateTime() {

                const date = new Date();

                const day = date.getDate();
                const mounth = date.getMonth() + 1;
                const year = date.getFullYear();
                const hour = date.getHours();
                const minutes = date.getMinutes();

                return `${day}/${mounth}/${year} ${hour}:${minutes}`;
            }

            function getDate() {

                const date = new Date();

                const day = date.getDate();
                const mounth = date.getMonth() + 1;
                const year = date.getFullYear();

                return `${day}/${mounth}/${year}`;
            }

            function getTime() {

                const date = new Date();

                const hour = date.getHours();
                const minutes = date.getMinutes();

                return `${hour}:${minutes}`;
            }

            function getFormattedDateV2(date) {

                const day = date.getDate();
                const mounth = date.getMonth() + 1;
                const year = date.getFullYear();

                return `${day}/${mounth}/${year}`;
            }

            function getFormattedDate(date) {

                let day = String(date.getDate()).padStart(2, '0');
                let mounth = String(date.getMonth() + 1).padStart(2, '0');
                let year = date.getFullYear();
                let hour = String(date.getHours()).padStart(2, '0');
                let minutes = String(date.getMinutes()).padStart(2, '0');

                return `${day}/${mounth}/${year}`;
            }

            function getFormattedTime(date) {

                let day = String(date.getDate()).padStart(2, '0');
                let mounth = String(date.getMonth() + 1).padStart(2, '0');
                let year = date.getFullYear();
                let hour = String(date.getHours()).padStart(2, '0');
                let minutes = String(date.getMinutes()).padStart(2, '0');

                return `${hour}:${minutes}`;
            }
        });

    </script>
}